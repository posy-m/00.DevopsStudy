<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="/popup.css">
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
  <select name="" id="selectBox">
    <option>1시버스</option>
    <option>2시버스</option>
    <option>3시버스</option>
  </select>
  <div id="content">
    <!-- <div class="line">
      <div class="seat enable"></div>
      <div class="seat enable"></div>
      <div class="seat disable"></div>
      <div class="seat disable"></div>
    </div> -->
  </div>
</body>
<script src="/popup.js"></script>
<script>
  // connect : 접속 요청을 봬는ㄴ 메서드
  const socket = io.connect();
  let selectIndex = 0;


  socket.on("reRender", (data) => {
    if (data.index === selectIndex) {
      const { selectIndex: { x, y } } = data
      const target = document.querySelector(`div[data-x="${x}"][data-y="${y}"]`)
      target.classList.add("disable");
      target.classList.remove("enable")
      target.onclick = null;
    }
    // const target = document.querySelectorAll(".seat");
    // const { selectIndex } = data;
    // target[selectIndex].classList.remove("enable");
    // target[selectIndex].classList.add("disable");
    // target[selectIndex].onclick = null;
  })
  const popup = new Popup("예매 하시겠습니까?");

  // const handlerClickBtn = () => {
  //   // console.log("확인 버튼");
  //   // const x = this.getAttribute("data-x")
  //   console.log(this);
  // }
  const handlerClickBtn2 = () => {
    console.log("취소 버튼");
  }

  const handlerClickSeat = (e) => {
    popup.open();
    const x = e.target.getAttribute("data-x")
    const y = e.target.getAttribute("data-y")
    const handlerClickBtn = () => {
      // index: selectIndex  : 한시버스, 두시버스 세시버스 중 어떤걸 선택한지 모르니까 준거임
      // server.js에 let seats = [[...seat01], [...seat01], [...seat01]] 에 번호를 주기 위한
      socket.emit("reserve", { selectIndex: { x, y }, index: selectIndex })
    }
    popup.addEventListener(handlerClickBtn, handlerClickBtn2)
  }
  const renderSeats = async (index) => {
    content.innerHTML = "";
    // data에는 배열안에 배여리 들어가 있다.
    const { data } = await axios.get(`/seats/${index}`);
    // console.log(data[2]);
    data.forEach((line, indexY) => {
      let lineElement = document.createElement("div");
      lineElement.classList.add("line");

      line.forEach((e, indexX) => {
        let seatElement = document.createElement("div")
        seatElement.classList.add("seat")
        //setAttribute 속성을 추가하는 메서드
        seatElement.setAttribute("data-x", indexX)
        seatElement.setAttribute("data-y", indexY)
        if (e === 1) {
          seatElement.classList.add("enable");
          seatElement.onclick = (e) => { handlerClickSeat(e) };
        } else if (e === 2) {
          seatElement.classList.add("disable")
        }
        lineElement.append(seatElement);
      });
      content.append(lineElement)
    });
  }
  selectBox.onchange = function () {
    //this.selectIndex == 선택되어 있는 index 번호
    // 0 1 2
    selectIndex = this.selectedIndex;
    renderSeats(selectIndex);
  }

  renderSeats(0)

</script>

</html>